{"ast":null,"code":"function generateDayList(schedule) {\n  let weekDays = ['LUNES', 'MARTES', 'MIÉRCOLES', 'JUEVES', 'VIERNES']; // Check if Saturnday or Sunday exists\n\n  for (const subject of schedule) {\n    for (let i = 1; i < 4; i++) {\n      let day = subject[`day${i}`];\n      let extraDays = {\n        'SABADO': 'SÁBADO',\n        'DOMINGO': 'DOMINGO'\n      };\n\n      for (const [key, value] of Object.entries(extraDays)) if (day !== null && day !== void 0 && day.includes(key) && !weekDays.includes(value)) weekDays.push(value);\n    }\n  }\n\n  return weekDays;\n}\n\nfunction generateTimeSlots(schedule) {\n  let timeSlots = [];\n  let lowerTime = 8;\n  let upperTime = 19; // Check the limits (upper and lowe)\n\n  for (const subject of schedule) {\n    for (const timeZone of subject.time_zones) {\n      let timeRange = timeZone.time_range;\n      if (timeRange.low < lowerTime) lowerTime = timeRange.low;\n      if (timeRange.high > upperTime) upperTime = timeRange.high;\n    }\n  }\n\n  for (let t = lowerTime; t < upperTime; t++) {\n    timeSlots.push(`${t}:00`);\n  }\n\n  return timeSlots;\n}\n\nfunction getTableParams(schedule) {\n  const weekDays = generateDayList(schedule);\n  const timeSlots = generateTimeSlots(schedule);\n  return {\n    weekDays,\n    timeSlots\n  };\n}\n\nfunction getColumn(time) {\n  let weekDays = ['LUNES', 'MARTES', 'MIERCOLES', 'JUEVES', 'VIERNES', 'SABADO', 'DOMINGO'];\n  let nameDay = time.day;\n\n  for (let i = 0; i < weekDays.length; i++) {\n    if (nameDay.includes(weekDays[i])) return i + 1;\n  }\n}\n\nfunction getRow(time, timeSlots) {\n  let start = time.time_range.low;\n\n  for (let i = 0; i < timeSlots.length; i++) {\n    const timeSlotHour = Number(timeSlots[i].split(':')[0]);\n\n    if (timeSlotHour >= start) {\n      if (timeSlotHour === start) return i * 60 !== 0 ? i * 60 : 1;else {\n        let startRow = i * 60;\n        let fractionRow = start - Math.floor(start);\n        startRow += fractionRow * 100;\n        return startRow;\n      }\n    }\n  }\n}\n\nfunction getHeight(time) {\n  let start = time.time_range.low;\n  let end = time.time_range.high;\n  let diff = end - start;\n  return diff * 60;\n}\n\nfunction getWidth(column, nColumns) {\n  return 100 / (nColumns - (column - 1)) * 0.85;\n}\n\nfunction getName(name) {\n  let words = name.split(\" \");\n\n  if (words.length >= 3) {\n    let newName = '';\n\n    for (const word of words) {\n      newName += word[0].toUpperCase() + '.';\n    }\n\n    return newName;\n  }\n\n  return name;\n}\n\nfunction getProfessor(name) {\n  if (!name) return name;\n  let words = name.split(\" \");\n\n  if (name.length >= 25) {\n    return words[words.length - 1] + ' ' + words[words.length - 2];\n  }\n\n  return name;\n}\n\nfunction getDayDescription(day) {\n  if (!day) return day;\n  let info = day.split(\"/\");\n  if (info[2].length >= 4) info[2] = info[2][info[2].length - 1];\n  return [info[1], info[2]];\n}\n\nfunction getColor(colors) {\n  let colorIndex = Math.floor(Math.random() * colors.length);\n  let color = colors[colorIndex];\n  colors.splice(colorIndex, 1);\n  return color;\n}\n\nfunction getEventsForCalendar(schedule, timeSlots, nColumns) {\n  const events = [];\n  let colors = ['#7D1E6A', '#6A67CE', '#F73D93', '#5F7161', '#541690', '#FF4949', '#205375', '#006E7F', '#005555', '#FF8C32'];\n\n  for (const subject of schedule) {\n    let color = getColor(colors);\n    let dayIndex = 1;\n\n    for (const time of subject.time_zones) {\n      let tempSubject = {}; // -------- Get info -------- //\n\n      tempSubject.name = getName(subject.name);\n      tempSubject.group = subject.group;\n      tempSubject.professor1 = getProfessor(subject.professor1);\n      tempSubject.professor2 = getProfessor(subject.professor2);\n      const [newTime, newRoom] = getDayDescription(subject[`day${dayIndex}`]);\n      tempSubject.time = newTime;\n      tempSubject.room = newRoom;\n      dayIndex++; // -------- Get position -------- //\n      // Get column\n\n      tempSubject.column = getColumn(time); // Get row\n\n      tempSubject.row = getRow(time, timeSlots); // -------- Get size -------- //\n      // Get height\n\n      tempSubject.height = `${getHeight(time)}px`; // Get width\n\n      tempSubject.width = `${getWidth(tempSubject.column, nColumns)}%`; // Get color\n\n      tempSubject.color = color; // -------- Add to array -------- //\n\n      events.push(tempSubject);\n    }\n  }\n\n  return events;\n}\n\nexport { getTableParams, getEventsForCalendar };","map":{"version":3,"names":["generateDayList","schedule","weekDays","subject","i","day","extraDays","key","value","Object","entries","includes","push","generateTimeSlots","timeSlots","lowerTime","upperTime","timeZone","time_zones","timeRange","time_range","low","high","t","getTableParams","getColumn","time","nameDay","length","getRow","start","timeSlotHour","Number","split","startRow","fractionRow","Math","floor","getHeight","end","diff","getWidth","column","nColumns","getName","name","words","newName","word","toUpperCase","getProfessor","getDayDescription","info","getColor","colors","colorIndex","random","color","splice","getEventsForCalendar","events","dayIndex","tempSubject","group","professor1","professor2","newTime","newRoom","room","row","height","width"],"sources":["/home/bubu/dev/dci-projects/hacedor_de_horarios_frontend/src/Components/Calendars/Components/Calendar/auxiliarFunctions.js"],"sourcesContent":["function generateDayList(schedule) {\n\tlet weekDays = ['LUNES', 'MARTES', 'MIÉRCOLES', 'JUEVES', 'VIERNES']\n\t// Check if Saturnday or Sunday exists\n\tfor (const subject of schedule) {\n\t\tfor (let i = 1; i < 4; i++) {\n\t\t\tlet day = subject[`day${i}`]\n\t\t\tlet extraDays = { 'SABADO': 'SÁBADO', 'DOMINGO':'DOMINGO'}\n\t\t\tfor (const [key, value] of Object.entries(extraDays))\n\t\t\t\tif (day?.includes(key) && !weekDays.includes(value))\n\t\t\t\t\tweekDays.push(value)\n\t\t}\n\t}\n\n\treturn weekDays\n}\nfunction generateTimeSlots(schedule) {\n\tlet timeSlots = []\n\tlet lowerTime = 8\n\tlet upperTime = 19\n\t// Check the limits (upper and lowe)\n\tfor (const subject of schedule) {\n\t\tfor (const timeZone of subject.time_zones) {\n\t\t\tlet timeRange = timeZone.time_range\n\t\t\tif (timeRange.low < lowerTime) lowerTime = timeRange.low\n\t\t\tif (timeRange.high > upperTime) upperTime = timeRange.high\n\t\t}\n\t}\n\n\tfor (let t = lowerTime; t < upperTime; t++) {\n\t\ttimeSlots.push(`${t}:00`)\n\t}\n\n\treturn timeSlots\n}\n\nfunction getTableParams(schedule) {\n\tconst weekDays = generateDayList(schedule)\n\tconst timeSlots = generateTimeSlots(schedule)\n\n\treturn {\n\t\tweekDays,\n\t\ttimeSlots\n\t}\n}\n\nfunction getColumn(time) {\n\tlet weekDays = ['LUNES', 'MARTES', 'MIERCOLES', 'JUEVES', 'VIERNES', 'SABADO', 'DOMINGO']\n\tlet nameDay = time.day\n\tfor (let i = 0; i < weekDays.length; i++) {\n\t\tif (nameDay.includes(weekDays[i]))\n\t\t\treturn i + 1\n\t}\n}\n\nfunction getRow(time, timeSlots) {\n\tlet start = time.time_range.low\n\n\tfor (let i = 0; i < timeSlots.length; i++) {\n\t\tconst timeSlotHour = Number(timeSlots[i].split(':')[0])\n\t\tif (timeSlotHour >= start) {\n\t\t\tif (timeSlotHour === start) return i * 60 !== 0 ? i * 60 : 1\n\t\t\telse {\n\t\t\t\tlet startRow = i * 60\n\t\t\t\tlet fractionRow = start - Math.floor(start)\n\t\t\t\tstartRow += fractionRow * 100\n\n\t\t\t\treturn startRow\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getHeight(time) {\n\tlet start = time.time_range.low\n\tlet end = time.time_range.high\n\tlet diff = end - start\n\treturn diff * 60\n}\n\nfunction getWidth(column, nColumns) {\n\treturn 100 / (nColumns - (column - 1)) * 0.85\n}\n\nfunction getName(name) {\n\tlet words = name.split(\" \")\n\tif (words.length >= 3) {\n\t\tlet newName = ''\n\t\tfor (const word of words) {\n\t\t\tnewName += word[0].toUpperCase() + '.'\n\t\t}\n\t\treturn newName\n\t}\n\n\treturn name\n}\n\nfunction getProfessor(name) {\n\tif(!name) return name\n\tlet words = name.split(\" \")\n\n\tif (name.length >= 25) {\n\t\treturn words[words.length - 1] + ' ' + words[words.length - 2]\n\t}\n\n\n\treturn name\n}\n\nfunction getDayDescription(day) {\n\tif (!day) return day\n\tlet info = day.split(\"/\")\n\n\tif (info[2].length >= 4)\n\t\tinfo[2] = info[2][info[2].length - 1]\n\n\treturn [info[1], info[2]]\n}\n\nfunction getColor(colors) {\n\tlet colorIndex = Math.floor(Math.random() * colors.length)\n\tlet color = colors[colorIndex]\n\tcolors.splice(colorIndex, 1)\n\treturn color\n}\n\nfunction getEventsForCalendar(schedule, timeSlots, nColumns) {\n\tconst events = []\n\tlet colors = [\n\t\t'#7D1E6A',\n\t\t'#6A67CE',\n\t\t'#F73D93',\n\t\t'#5F7161',\n\t\t'#541690',\n\t\t'#FF4949',\n\t\t'#205375',\n\t\t'#006E7F',\n\t\t'#005555',\n\t\t'#FF8C32'\n\t]\n\tfor (const subject of schedule) {\n\t\tlet color = getColor(colors)\n\t\tlet dayIndex = 1\n\t\tfor (const time of subject.time_zones) {\n\t\t\tlet tempSubject = {}\n\t\t\t// -------- Get info -------- //\n\t\t\ttempSubject.name = getName(subject.name)\n\t\t\ttempSubject.group = subject.group\n\t\t\ttempSubject.professor1 = getProfessor(subject.professor1)\n\t\t\ttempSubject.professor2 = getProfessor(subject.professor2)\n\t\t\tconst [\n\t\t\t\tnewTime,\n\t\t\t\tnewRoom\n\t\t\t] = getDayDescription(subject[`day${dayIndex}`])\n\t\t\ttempSubject.time = newTime\n\t\t\ttempSubject.room = newRoom\n\t\t\tdayIndex++\n\t\t\t// -------- Get position -------- //\n\t\t\t// Get column\n\t\t\ttempSubject.column = getColumn(time)\n\t\t\t// Get row\n\t\t\ttempSubject.row = getRow(time, timeSlots)\n\t\t\t// -------- Get size -------- //\n\t\t\t// Get height\n\t\t\ttempSubject.height = `${getHeight(time)}px`\n\t\t\t// Get width\n\t\t\ttempSubject.width = `${getWidth(tempSubject.column, nColumns)}%`\n\t\t\t// Get color\n\t\t\ttempSubject.color = color\n\t\t\t// -------- Add to array -------- //\n\t\t\tevents.push(tempSubject)\n\t\t}\n\t}\n\n\treturn events\n}\n\n\nexport {getTableParams, getEventsForCalendar}"],"mappings":"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"},"metadata":{},"sourceType":"module"}